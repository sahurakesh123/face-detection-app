version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: face_recognition_db
    environment:
      POSTGRES_DB: face_recognition_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - face_recognition_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: face_recognition_redis
    ports:
      - "6379:6379"
    networks:
      - face_recognition_network

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: face_recognition_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/face_recognition_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./models:/app/models
    networks:
      - face_recognition_network

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: face_recognition_frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - face_recognition_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: face_recognition_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - face_recognition_network

volumes:
  postgres_data:

networks:
  face_recognition_network:
    driver: bridge